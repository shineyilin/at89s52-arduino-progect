C51 COMPILER V9.01   IR_FUNC                                                               08/31/2016 16:07:59 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE IR_FUNC
OBJECT MODULE PLACED IN ir_func.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ir_func.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "ir_func.h"
   2          #include "show.h"
   3          #include "uart.h"
   4          //sbit IR_REC = P3^2;
   5          
   6          IR_DATA ir_value;
   7          
   8          void delay70us(unsigned char x)    //x*0.07MS
   9          {
  10   1              unsigned char i;
  11   1              while(x--)
  12   1              {
  13   2                      for (i = 0; i<13; i++) {}
  14   2              }
  15   1      }
  16          
  17          static void IR_Read(void) interrupt 0
  18          {
  19   1              uchar i;
  20   1              uchar j;
  21   1              uchar n;
  22   1              uchar value[4]=0;
  23   1              EX0 = 0;
  24   1              
  25   1              led8 = 1;
  26   1              led7 = 1;
  27   1      
  28   1              delay70us(10);
  29   1                              
  30   1              if (IR_REC==1) {EX0 = 1;return;}
  31   1              led8 = 0;
  32   1              while (IR_REC==0)       delay70us(1);
  33   1              while(IR_REC);  
  34   1              for (i = 0; i<4; i++)
  35   1              {
  36   2                      for (j = 0; j<8; j++)
  37   2                      {
  38   3      
  39   3               //=0
  40   3                              while(!IR_REC)  delay70us(1);   
  41   3                              while(IR_REC)
  42   3                              {
  43   4                                      delay70us(1);
  44   4                                      n++;
  45   4                              
  46   4                                      if (n>30){led7 =0;break;}
  47   4                              }
  48   3                              value[i] >>= 1; 
  49   3                              if (n>10) value[i] |=0x80;
  50   3                              n = 0;
  51   3                      }
  52   2              }
  53   1              if (value[2]!=~value[3])
  54   1              {
  55   2                      EX0 = 1;
C51 COMPILER V9.01   IR_FUNC                                                               08/31/2016 16:07:59 PAGE 2   

  56   2                      return;
  57   2              }
  58   1              
  59   1              ir_value.ir_rec = value[2];
  60   1              //putchar(ir_value.ir_rec);
  61   1              switch(value[2])    //ÅÐ¶Ï°´¼ü¼üÂëÖµ
  62   1              {
  63   2                      case 0x16:ir_value.ir_but=0;break;  
  64   2                      case 0x0c:ir_value.ir_but=1;break;   
  65   2                      case 0x18:ir_value.ir_but=2;break;   
  66   2                      case 0x5e:ir_value.ir_but=3;break;  
  67   2                      case 0x08:ir_value.ir_but=4;break;   
  68   2                      case 0x1c:ir_value.ir_but=5;break;   
  69   2                      case 0x5a:ir_value.ir_but=6;break;   
  70   2                      case 0x42:ir_value.ir_but=7;break;   
  71   2                      case 0x52:ir_value.ir_but=8;break;   
  72   2                      case 0x4a:ir_value.ir_but=9;break;   
  73   2              
  74   2                      default :break; 
  75   2              }
  76   1              printf("%d\n",ir_value.ir_but);
  77   1              EX0 = 1;
  78   1      }
  79          
  80          
  81          void IR_Write(uchar value)
  82          {
  83   1              char i;
  84   1              IR_SEN = 0;
  85   1              delayus(2);
  86   1              for (i = 0; i<8; i++)
  87   1              {
  88   2                      IR_SEN = value&0x01;
  89   2                      delayus(2);
  90   2                      value >>= 1;
  91   2              }
  92   1              IR_SEN = 1;
  93   1      }
  94          
  95          void IR_Init()
  96          {
  97   1              IT0 = 1;
  98   1              EA = 1;
  99   1              EX0 = 1;
 100   1      }
*** WARNING C316 IN LINE 100 OF ir_func.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    407    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
